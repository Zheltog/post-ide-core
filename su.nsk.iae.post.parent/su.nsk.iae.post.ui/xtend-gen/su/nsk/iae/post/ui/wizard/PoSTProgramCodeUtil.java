package su.nsk.iae.post.ui.wizard;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class PoSTProgramCodeUtil {
  public static String getTeplateProgram() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("CONFIGURATION Conf");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("RESOURCE Res1 ON TestCPU");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("TASK T1 (INTERVAL := T#100ms, PRIORITY := 1);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("PROGRAM p1 WITH T1 : Program1;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("END_RESOURCE");
    _builder.newLine();
    _builder.newLine();
    _builder.append("END_CONFIGURATION");
    _builder.newLine();
    _builder.newLine();
    _builder.append("PROGRAM Program1");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("PROCESS Process1");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("STATE State1");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("END_STATE");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("END_PROCESS");
    _builder.newLine();
    _builder.newLine();
    _builder.append("END_PROGRAM");
    _builder.newLine();
    return _builder.toString();
  }
  
  public static String getHandDryerProgram() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("CONFIGURATION Conf");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("RESOURCE Res1 ON TestCPU");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("TASK T1 (INTERVAL := T#100ms, PRIORITY := 1);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("PROGRAM dryer WITH T1 : HandDryer;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("END_RESOURCE");
    _builder.newLine();
    _builder.newLine();
    _builder.append("END_CONFIGURATION");
    _builder.newLine();
    _builder.newLine();
    _builder.append("PROGRAM HandDryer");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("VAR_INPUT");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("hands : BOOL;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("END_VAR");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("VAR_OUTPUT");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("control : BOOL;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("END_VAR");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("PROCESS Dry");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("STATE Wait");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("IF hands THEN");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("control := TRUE;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("SET NEXT;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("END_IF");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("END_STATE");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("STATE Work");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("IF hands THEN");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("RESET TIMER;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("END_IF");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("TIMEOUT T#2s THEN");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("control := FALSE;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("SET STATE Wait;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("END_TIMEOUT");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("END_STATE");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("END_PROCESS");
    _builder.newLine();
    _builder.newLine();
    _builder.append("END_PROGRAM");
    _builder.newLine();
    return _builder.toString();
  }
}
