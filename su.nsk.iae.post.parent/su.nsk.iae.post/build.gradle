dependencies {
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
	compile group: 'org.eclipse.core', name: 'runtime', version: '3.10.0-v20140318-2214'
	compile group: 'org.eclipse.core', name: 'org.eclipse.core.resources', version: '3.7.100'
}

configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
}

task precompile(type: JavaCompile) {
	source = 'src/main'
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.java.outputDir
}

task generateXtextLanguage(type: JavaExec) {
	dependsOn precompile
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/java/su/nsk/iae/post/GeneratePoST.mwe2"
	inputs.file "src/main/java/su/nsk/iae/post/PoST.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/java/su/nsk/iae/post/GeneratePoST.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
