/**
 * generated by Xtext 2.25.0
 */
package su.nsk.iae.post.poST.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import su.nsk.iae.post.poST.PoSTPackage;
import su.nsk.iae.post.poST.TemplateProcess;
import su.nsk.iae.post.poST.TemplateProcessConfElement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Template Process Conf Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.post.poST.impl.TemplateProcessConfElementImpl#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.TemplateProcessConfElementImpl#isActive <em>Active</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.TemplateProcessConfElementImpl#getProcess <em>Process</em>}</li>
 *   <li>{@link su.nsk.iae.post.poST.impl.TemplateProcessConfElementImpl#getArgs <em>Args</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TemplateProcessConfElementImpl extends ProgramConfElementImpl implements TemplateProcessConfElement
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isActive() <em>Active</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isActive()
   * @generated
   * @ordered
   */
  protected static final boolean ACTIVE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isActive() <em>Active</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isActive()
   * @generated
   * @ordered
   */
  protected boolean active = ACTIVE_EDEFAULT;

  /**
   * The cached value of the '{@link #getProcess() <em>Process</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProcess()
   * @generated
   * @ordered
   */
  protected TemplateProcess process;

  /**
   * The default value of the '{@link #getArgs() <em>Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected static final String ARGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected String args = ARGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TemplateProcessConfElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PoSTPackage.Literals.TEMPLATE_PROCESS_CONF_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isActive()
  {
    return active;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActive(boolean newActive)
  {
    boolean oldActive = active;
    active = newActive;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ACTIVE, oldActive, active));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TemplateProcess getProcess()
  {
    if (process != null && process.eIsProxy())
    {
      InternalEObject oldProcess = (InternalEObject)process;
      process = (TemplateProcess)eResolveProxy(oldProcess);
      if (process != oldProcess)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS, oldProcess, process));
      }
    }
    return process;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TemplateProcess basicGetProcess()
  {
    return process;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProcess(TemplateProcess newProcess)
  {
    TemplateProcess oldProcess = process;
    process = newProcess;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS, oldProcess, process));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArgs()
  {
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArgs(String newArgs)
  {
    String oldArgs = args;
    args = newArgs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ARGS, oldArgs, args));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__NAME:
        return getName();
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ACTIVE:
        return isActive();
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS:
        if (resolve) return getProcess();
        return basicGetProcess();
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ARGS:
        return getArgs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__NAME:
        setName((String)newValue);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ACTIVE:
        setActive((Boolean)newValue);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS:
        setProcess((TemplateProcess)newValue);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ARGS:
        setArgs((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ACTIVE:
        setActive(ACTIVE_EDEFAULT);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS:
        setProcess((TemplateProcess)null);
        return;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ARGS:
        setArgs(ARGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ACTIVE:
        return active != ACTIVE_EDEFAULT;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__PROCESS:
        return process != null;
      case PoSTPackage.TEMPLATE_PROCESS_CONF_ELEMENT__ARGS:
        return ARGS_EDEFAULT == null ? args != null : !ARGS_EDEFAULT.equals(args);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", active: ");
    result.append(active);
    result.append(", args: ");
    result.append(args);
    result.append(')');
    return result.toString();
  }

} //TemplateProcessConfElementImpl
